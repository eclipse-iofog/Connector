sudo: true
language: java
jdk: openjdk8
notifications:
  slack:
    rooms:
      - secure: Wt3poksUpWqbzIQEGRPsi2yYkVczQh6Z99wquHhH/orBqCl2PpyTU49mokZIWQNh3MI5mg+3kknlGDLolVfYRfY2KhIApj0teNv587HFrcoQJiyJaXQwq85fRTsDO6RGg4ImSkhAfGV2XhI0KBaT4NWCbAGA9Kx274oEcZwdxdTByUlXsr3hyxu/sAa4AurbqjEUAFjGn4BlDyp8+EjdIih1Pn3u6Gz4FCNiMByhdyZ+Y6fiqff+cWtONNSXHphAModMsqQ6GaKZ2skkeFf7EaFg1IoEpOk1bfZbpQAa3YZLl2Fk0eVN3byCay+G+Osb0F1VgXENUtW05VTJP1ntK7NpKPlaZ2CzeW9tx8rY6OIPp0cBfuE+2kY8DA86mvuq1tabUR7h6FVHpBkC/RXrn8PmJnagGNpIkGYQA3k4dDECyk3plKSKB3aijXKqB3ELDN9AZTbp2DHWPwE3duSAmyPVYiY1xSVMQrNASjpO7JX9Dx54d4QyJbX0xTWXgDXU+wA0S4A8rPPwSTmmIpzmMdv7gSeoGLcYWswDd30k2CfdqmDFKZte5eFJ9hjXr4L6+vAyZ8LQXBRNVjkz/o1FDqM9LgT/1cGvrt/bhqojxZPF2ZZ5GmBgvSVedq4Lhq8NYQB2oI976vNyPwhFzoackhazlS8ZB90ti3w8d/7xQ7A=
    on_success: always
    on_failure: always
    template:
      - Repo `%{repository_slug}` *%{result}* build (<%{build_url}|#%{build_number}>)
        for commit (<%{compare_url}|%{commit}>) on branch `%{branch}`.
      - 'Execution time: *%{duration}*'
      - 'Message: %{message}'
env:
  global:
    - COMMIT=${TRAVIS_COMMIT::8}
stages:
- name: build
  if: type = pull_request
- name: dev_deploy
  if: branch = develop AND type = push
- name: pre_release
  if: branch =~ /^release-.*$/ AND type = push
- name: release
  if: branch = master and type = push
jobs:
  include:
  - stage: build
  - stage: dev_deploy
    before_install:
    - sudo apt-get install sshpass xml-twig-tools
    script:
    - export VERSION=`xml_grep --cond='project/version' pom.xml --text_only`
    - export ID=-dev
    - |
      bash scripts/packaging.sh &&
      bash scripts/deploy.sh $DEV_MACHINE_PASSWORD $DEV_MACHINE_USERNAME $DEV_MACHINE_IP &&
      bash scripts/deploy.sh $JRC_MACHINE_PASSWORD $JRC_MACHINE_USERNAME $JRC_MACHINE_IP &&
      bash scripts/deploy.sh $ATTINAD_MACHINE_PASSWORD $ATTINAD_MACHINE_USERNAME $ATTINAD_MACHINE_IP &&
      docker build -t iofog/connector-develop:latest --build-arg TAG=$ID . &&
      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin &&
      docker push iofog/connector-develop:latest &&
      docker tag iofog/connector-develop:latest iofog/connector-develop:$COMMIT &&
      docker push iofog/connector-develop:$COMMIT || travis_terminate 1
  - stage: pre_release
    before_install:
    - sudo apt-get install sshpass xml-twig-tools
    script:
    - |
      export VERSION=`xml_grep --cond='project/version' pom.xml --text_only` &&
      export ID=-prerelease
    - |
      bash scripts/packaging.sh &&
      bash scripts/deploy.sh $PREPROD_MACHINE_PASSWORD $PREPROD_MACHINE_USERNAME $PREPROD_MACHINE_IP &&
      docker build -t iofog/connector:rc . &&
      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin &&
      docker push iofog/connector:rc &&
      docker tag iofog/connector:rc iofog/connector:rc-$VERSION &&
      docker push iofog/connector:rc-$VERSION || travis_terminate 1
  - stage: release
    before_install:
    - sudo apt-get install sshpass xml-twig-tools
    script:
    - export VERSION=`xml_grep --cond='project/version' pom.xml --text_only`
    - |
      bash scripts/packaging.sh &&
      docker build -t iofog/connector:latest . &&
      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin &&
      docker push iofog/connector:latest &&
      docker tag iofog/connector:latest iofog/connector:$VERSION &&
      docker push iofog/connector:$VERSION || travis_terminate 1
    before_deploy:
    - git config --global user.name "${GH_USERNAME}";
    - git config credential.helper "store --file=.git/credentials";
    - echo "https://${GH_TOKEN}:@github.com" > .git/credentials;
    - git tag ${VERSION}
    deploy:
      provider: releases
      api_key: "${GH_TOKEN}"
      name: v${VERSION} ($(date +'%m/%d/%Y'))
      skip_cleanup: true
      on:
        branch: master
    after_deploy:
    - bash scripts/deploy.sh $PROD_MACHINE_PASSWORD $PROD_MACHINE_USERNAME $PROD_MACHINE_IP
